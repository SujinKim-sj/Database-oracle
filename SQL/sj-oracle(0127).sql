SELECT * FROM TAB;
SELECT * FROM point;
SELECT * FROM student;

CREATE TABLE POINT(
    NO NUMBER CONSTRAINT POINT_NO_PK PRIMARY KEY,
    NUM NUMBER CONSTRAINT POINT_NUM_FK REFERENCES STUDENT (NUM) ON DELETE SET NULL,
    KOR NUMBER(3),
    ENG NUMBER(3) CONSTRAINT POINT_ENG_C CHECK (ENG BETWEEN 0 AND 100),
    MATH NUMBER(3),
    TOTAL NUMBER(3),
    MEAN NUMBER(5, 2) DEFAULT 0.00
);

INSERT INTO STUDENT
VALUES (1, 'n1', '010-2234-2463', 'apple@naver.com');

INSERT INTO STUDENT
VALUES (2, 'n2', '010-7745-2343', 'banana@naver.com');

INSERT INTO POINT (NO, NUM, KOR, ENG, MATH, TOTAL, MEAN)
VALUES(1, 1, 60, 80, 75, 215, 72.00);

INSERT INTO POINT
VALUES(2, 2, 70, 60, 70, 200, 66.66);

INSERT INTO POINT (NO, NUM, KOR, ENG, MATH, TOTAL, MEAN)
VALUES(3, 4, 60, 70, 80, 210, 70.0);

delete from student;

drop table point;
drop table student;

SELECT * FROM recyclebin;

-----------------Alter------------
ALTER TABLE STUDENT ADD (ADDRESS VARCHAR2(100));
ALTER TABLE student DROP COLUMN address;
ALTER TABLE student RENAME COLUMN phone To mobile;

UPDATE STUDENT SET EMAIL = NULL;
ALTER TABLE student MODIFY (EMAIL VARCHAR2(30));

-- Student Table에 학생의 나이를 담을 컬럼을 추가
ALTER TABLE student ADD (AGE NUMBER(3));
INSERT INTO STUDENT
VALUES (2, 'n2', '010-7745-2343', 'banana@naver.com', 10);

-- age를 NUMBER(4)
ALTER TABLE STUDENT MODIFY (AGE NUMBER(4));

--Rename
RENAME STUDENT TO MEMBER;
SELECT * FROM member;

--게시판
--번호, 제목, 작성자, 작성날짜, 조회수, 글내용
--PK boardNum number, title varchar2(200), writer varchar2(100), regDate Date
--hit number, contents varchar2(4000)
--제약조건 없이 코드만 작성

CREATE TABLE board(
    boardNum NUMBER,        --pk
    title VARCHAR2(200),    --not null
    writer NUMBER,
    contents VARCHAR2(4000),
    regDate Date,
    hit NUMBER
);

INSERT INTO board
VALUES (BOARD_SEQ.NEXTVAL, 't3', '2', 'c2', sysdate, 0); 

SELECT * FROM board;

ALTER TABLE board ADD CONSTRAINT board_num_pk PRIMARY KEY (boardNum);
ALTER TABLE board ADD CONSTRAINT board_name_fk FOREIGN KEY (writer) REFERENCES member (num);
ALTER TABLE BOARD DROP CONSTRAINT board_num_pk;
ALTER TABLE BOARD DROP CONSTRAINT board_name_fk;

DROP TABLE board;
DELETE BOARD;
SELECT * FROM user_constraints WHERE table_name = 'BOARD';

-- SEQUENCE
SELECT * FROM SEQ;

SELECT BOARD_SEQ.NEXTVAL FROM DUAL;
SELECT BOARD_SEQ.CURRVAL FROM DUAL;

CREATE SEQUENCE BOARD_SEQ;

DROP SEQUENCE BOARD_SEQ;

--------
DROP TABLE POINT;
DROP TABLE BOARD;
DROP TABLE CART;

--MEMBER
CREATE TABLE MEMBER (
    ID VARCHAR2(100) CONSTRAINT MEMBER_ID_PK PRIMARY KEY,
    PW VARCHAR2(100) NOT NULL,
    NAME VARCHAR2(100) NOT NULL,
    PHONE VARCHAR2(100) CONSTRAINT MEMBER_PHONE_U UNIQUE,
    EMAIL VARCHAR2(100) CONSTRAINT MEMBER_EMAIL_U UNIQUE
);

--PRODUCT
CREATE TABLE PRODUCT (
    PRODUCT_NUM NUMBER CONSTRAINT PRODUCT_PN_PK PRIMARY KEY,
    PRODUCT_NAME VARCHAR2(100) NOT NULL,
    PRICE NUMBER NOT NULL,
    CONTENTS VARCHAR2(4000),
    AMOUNT NUMBER 
);

--CART
CREATE TABLE CART (
    CART_NUM NUMBER CONSTRAINT CART_CN_PK PRIMARY KEY,
    PRODUCT_NUM NUMBER CONSTRAINT CART_PN_FK REFERENCES PRODUCT ON DELETE SET NULL,
    AMOUNT NUMBER,
    TOTAL_PRICE NUMBER,
    ID VARCHAR2(100) CONSTRAINT CART_ID_FK REFERENCES MEMBER (ID) ON DELETE CASCADE
);

--SEQUENCE
CREATE SEQUENCE PRODUCT_SEQ;
CREATE SEQUENCE CART_SEQ;

--INSERT
INSERT INTO MEMBER
VALUES('a1', 'a1', 'apple', '010-1111-1111', 'a1@gmail.com');

INSERT INTO product
VALUES(PRODUCT_SEQ.NEXTVAL, 'p1', 10000, 'EX1', 10);

INSERT INTO product
VALUES(PRODUCT_SEQ.NEXTVAL, 'p2', 20000, 'EX2', 20);

INSERT INTO cart
VALUES(f, 'a1', 'apple', '010-1111-1111', 'a1@gmail.com');


SELECT * FROM MEMBER;
SELECT * FROM PRODUCT;
SELECT * FROM CART;

COMMIT;