SELECT * FROM TAB;

-- 테이블 생성
CREATE TABLE TEST(
    COL1 VARCHAR2(30),
    COL2 NUMBER(2),
    COL3 DATE
)

SELECT * FROM TEST;
-- INSERT 3개
INSERT INTO TEST
VALUES('Miae', 1, '1999-10-09');

INSERT INTO TEST
VALUES('Chul', 1, '1999/03/02');

INSERT INTO TEST
VALUES('Jinseop', 1, '19981223');

-- 테이블명은 POINT 
-- 번호(NUM) 이름(NAME) 국어(KOR) 영어(ENG) 수학(MATH) 총점(TOTAL) 평균(MEAN)
-- 테이블 생성하고 INSERT 3개
-- 테이블 레벨 방식
CREATE TABLE POINT(
    NUM NUMBER,
    NAME VARCHAR2(30) CONSTRAINT POINT_NAME_NN NOT NULL,
    KOR NUMBER(3),
    ENG NUMBER(3) CONSTRAINT POINT_ENG_C CHECK (ENG BETWEEN 0 AND 100),
    MATH NUMBER(3),
    TOTAL NUMBER(3),
    MEAN NUMBER(5, 2) DEFAULT 0.00, 
    CONSTRAINT POINT_NUM_PK PRIMARY KEY (NUM),
    CONSTRAINT POINT_KOR_C CHECK (KOR BETWEEN 0 AND 100)
);

INSERT INTO POINT (NUM, NAME, KOR, ENG, MATH, TOTAL, MEAN)
VALUES(1, '미애', 60, 80, 75, 215, 72.00);

INSERT INTO POINT
VALUES(2, '철', 70, 60, 70, 200, 66.66);

INSERT INTO POINT
VALUES(3, '정욱', 80, 80, 80, 240, 80);

INSERT INTO POINT
VALUES(4, '진섭', 80, 80, 80, 240, NULL);

INSERT INTO POINT (NUM, NAME, KOR, ENG, MATH, TOTAL)
VALUES(5, '홍욱', 60, 80, 75, 215);


SELECT * FROM POINT;

-- Student
-- 학번, 이름, 전화번호, 이메일
CREATE TABLE STUDENT (
    STU_ID NUMBER(10) PRIMARY KEY,
    NAME VARCHAR2(20),
    PHONE VARCHAR2(20),
    EMAIL VARCHAR2(30)
)

INSERT INTO STUDENT(stu_id, name, phone, email)
VALUES (1001, 'Apple', '010-2234-2463', 'apple@naver.com');

INSERT INTO STUDENT(stu_id, name, phone, email)
VALUES (1002, 'Banana', '010-7745-2343', 'banana@naver.com');

INSERT INTO STUDENT(stu_id, name, phone, email)
VALUES (1003, 'Coffee', '010-7745-2343', 'coffee@naver.com');

SELECT * FROM student;

DELETE STUDENT WHERE stu_id = 1002;

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'STUDENT';

-- 컬럼레벨 방식
CREATE TABLE STUDENT(
    STU_ID NUMBER CONSTRAINT STUDENT_STU_ID_PK PRIMARY KEY,
    --NAME VARCHAR2(20) CONSTRAINT ST_NAME_NN NOT NULL,
    --NOT NULL은 제약조건이름을 명시해도 나오지 않으니 그냥 선언해도 무방
    NAME VARCHAR2(20) NOT NULL,
    PHONE VARCHAR2(20) CONSTRAINT STUDENT_PHONE_U UNIQUE,
    EMAIL VARCHAR2(30) CONSTRAINT STUDENT_EMAIL_U UNIQUE
)

------------------------------------------
CREATE TABLE Student_Point (
    NUM NUMBER CONSTRAINT ST_STU_ID_PK PRIMARY KEY,
    NAME VARCHAR2(20) NOT NULL,
    PHONE VARCHAR2(20) CONSTRAINT ST_PHONE_U UNIQUE,
    EMAIL VARCHAR2(30) CONSTRAINT ST_EMAIL_U UNIQUE,
    KOR NUMBER(3),
    ENG NUMBER(3) CONSTRAINT ST_ENG_C CHECK (ENG BETWEEN 0 AND 100),
    MATH NUMBER(3),
    TOTAL NUMBER(3),
    MEAN NUMBER(5, 2) DEFAULT 0.00
)

INSERT INTO student_point
VALUES(1, 'N1', '010222222', 'N1@gmail.com', 10, 10, 10, 30, 10);

INSERT INTO student_point
VALUES(1, 'N1', '010222222', 'N1@gmail.com', 20, 20, 20, 60, 20);


SELECT * FROM student_point;
------------------------------------------------
CREATE TABLE STUDENT(
    NUM NUMBER CONSTRAINT STUDENT_NUM_PK PRIMARY KEY,
    NAME VARCHAR2(20) NOT NULL,
    PHONE VARCHAR2(20) CONSTRAINT STUDENT_PHONE_U UNIQUE,
    EMAIL VARCHAR2(30) CONSTRAINT STUDENT_EMAIL_U UNIQUE
);

CREATE TABLE POINT(
    NO NUMBER CONSTRAINT POINT_NO_PK PRIMARY KEY,
    NUM NUMBER,     --CONSTRAINT POINT_NUM_FK REFERENCES STUDENT (NUM),
    KOR NUMBER(3),
    ENG NUMBER(3) CONSTRAINT POINT_ENG_C CHECK (ENG BETWEEN 0 AND 100),
    MATH NUMBER(3),
    TOTAL NUMBER(3),
    MEAN NUMBER(5, 2) DEFAULT 0.00,
    CONSTRAINT POINT_NUM_FK FOREIGN KEY (NUM) REFERENCES STUDENT (NUM)
);

INSERT INTO STUDENT(num, name, phone, email)
VALUES (1, 'n1', '010-2234-2463', 'apple@naver.com');

INSERT INTO STUDENT(num, name, phone, email)
VALUES (2, 'n2', '010-7745-2343', 'banana@naver.com');

INSERT INTO POINT (NO, NUM, KOR, ENG, MATH, TOTAL, MEAN)
VALUES(1, 1, 60, 80, 75, 215, 72.00);

INSERT INTO POINT
VALUES(2, 2, 70, 60, 70, 200, 66.66);

INSERT INTO POINT (NO, NUM, KOR, ENG, MATH, TOTAL, MEAN)
VALUES(3, 4, 60, 70, 80, 210, 70.0);

-- 학생이름이 'n1'인 학생의 점수를 조회
SELECT *
FROM point
WHERE num = (SELECT num FROM student WHERE name = 'n1');

-- 학생번호가 2인 학생의 이름, 이메일, 총점, 평균을 출력
SELECT p.name, s.email, p.total, p.mean
FROM student s
    INNER JOIN 
    point p
    USING(num)
WHERE num = 2;

-- 테이블 삭제
DROP TABLE TEST;
DROP TABLE STUDENT;
DROP TABLE POINT;
DROP TABLE STUDENT_POINT;

CREATE TABLE NOTICE(
    NO NUMBER CONSTRAINT NOTICE_NO_PK PRIMARY KEY,
    SUBJECT VARCHAR2(100),
    CONTENT VARCHAR2(4000),
    NAME VARCHAR2(10),
    NOTICE_DATE DATE,
    HIT NUMBER
)

INSERT INTO NOTICE
VALUES (1, '라이브 안내', '공연일시: 2022년 2월 26일(토) 오후 5시','관리자', '22/01/25', 156);

INSERT INTO NOTICE
VALUES (2, '예약판매 OFFICIAL MD', '관리자', '22/01/21', 512);

INSERT INTO NOTICE
VALUES (3, '콘서트 공연시간 변경 안내', '관리자', '22/01/04', 1901);

SELECT * FROM notice;
DROP TABLE NOTICE;